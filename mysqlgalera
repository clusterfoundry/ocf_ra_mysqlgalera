#!/bin/bash

HOSTNAME=`uname -n`
SST_AUTH="root:rootpass"
SST_METHOD="xtrabackup"
MYSQLD_DEFAULT_PARAM="--basedir=/usr --datadir=/var/lib/mysql --bind-address=0.0.0.0 --port=3306"
MYSQLD_SAFE_BIN="/usr/bin/mysqld_safe"
FALSE=1
TRUE=0
ra_log() {
	# parameter: ra_log (info|debug|err) "$message"
	local type=$1
	local message=$2

	echo "$message" | logger -t "ocf-mysqlgalera[$type]"
}
is_master() {
	local parent_log=${1} -> ${FUNCNAME[0]}"() $2"
	ra_log "$parent_log" err
}
the_master_node() {
	local parent_log=${1} -> ${FUNCNAME[0]}"()"
	if ocf_is_ms; then
}
is_mysql_running() {
}
run_as() {
	# parameter: run_as "$parent_log" (master|slave|none) [master_hostname]
	local parent_log=`echo "${1} -> ${FUNCNAME[0]}() mode=$2,master_hostname=$3"`
	local mode=$2
	local master=$3
	local extra_args=
	local is_ms=$FALSE
	local rc

	# check if mysql service will be running as master, slave or single/independent instance
	case $mode in
		master)
			extra_args=`echo "$extra_args" --wsrep_provider=/usr/lib64/libgalera_smm.so`
			extra_args=`echo "$extra_args" --wsrep_cluster_name=cluster1`
			extra_args=`echo "$extra_args" --wsrep_cluster_address=\"gcomm://\"`
			extra_args=`echo "$extra_args" --wsrep_sst_auth=\"$SST_AUTH\"`
			extra_args=`echo "$extra_args" --wsrep_sst_method=$SST_METHOD`
			ra_log debug "$parent_log -> case mode=\"$mode\" -> sst_auth=\"$SST_AUTH\",sst_method=\"SST_METHOD\""
		;;
		slave)
			extra_args=`echo "$extra_args" --wsrep_provider=/usr/lib64/libgalera_smm.so`
			extra_args=`echo "$extra_args" --wsrep_cluster_name=cluster1`
			extra_args=`echo "$extra_args" --wsrep_cluster_address="gcomm://$master"`
			extra_args=`echo "$extra_args" --wsrep_sst_auth="$SST_AUTH"`
			extra_args=`echo "$extra_args" --wsrep_sst_method=$SST_METHOD`
			ra_log debug "$parent_log -> case mode=\"$mode\" -> extra_args=$extra_args"
		;;
		*)
			ra_log debug"$parent_log -> case mode=\"$mode\" -> extra_args=$extra_args"
		;;
	esac
	
	$MYSQLD_BIN_SAFE $MYSQLD_PARAM $extra_args >/dev/null 2>&1 &
	rc=$?
	ra_log "debug $parent_log -> $MYSQLD_BIN_SAFE $MYSQLD_PARAM $extra_args -> return $rc"
	
	if [ $rc -ne 0 ]; then
		ra_log debug "$parent_log -> exit OCF_ERR_GENERIC/$OCF_ERR_GENERIC"
		return $OCF_ERR_GENERIC
	fi
	
	ra_log debug "$parent_log -> exit OCF_SUCCESS/$OCF_SUCCESS"
	return $OCF_SUCCESS
}
ra_metadata() {
	local parent_log=${FUNCNAME[0]}"() "
}
ra_stop() {
	local parent_log=${FUNCNAME[0]}"() "
}
ra_start() {
	local parent_log=`echo "${1} -> ${FUNCNAME[0]}()"`
	local rc-ocf_is_ms
	ocf_is_ms
	rc-ocf_is_ms=$?

	if [ $rc-ocf_is_ms -eq 0 ]; the
		# Resource running in Master/Slave
		local rc-the_master_node
		local master_node=`the_master_node`
		rc-the_master_node=
		ra_log debug "$parent_log -> ocf_is_ms=$rc-ocf_is_ms -> the_master_node=$master_node -> return $rc-the_master_node"
		
		if [ $rc-the_master_node -eq $TRUE ]; then
			# The function the_master_node() run successfully
			if [ x"$master_node" == x"$HOSTNAME" ]; then
				# We are the master
			elif [ x"$master_node" == x"" ]; then
				# The resource is currently in master/slave node but no node is currently elected as master
			
			fi
		else
			# Something went wrong with the function the_master_nod)
			:
		fi
		
			ra_log debug "$parent_log -> ocf_is_ms=$rc-ocf_is_ms -> run_as \"<log>\" none"
	else
		# Resource running on single instance(without replication)
		ra_log debug "$parent_log -> ocf_is_ms=$rc-ocf_is_ms -> run_as \"<log>\" none"
		run_as "$parent_log" none
		ra_log debug "$parent_log -> ocf_is_ms=$rc-ocf_is_ms -> run_as \"<log>\" none -> return $?"
	fi
}
ra_monitor() {
	local parent_log=${FUNCNAME[0]}"() "
}
ra_demote() {
	local parent_log=${FUNCNAME[0]}"() "
}
ra_promote() {
	local parent_log=${FUNCNAME[0]}"() "
}
ra_monitor() {
	local parent_log=${FUNCNAME[0]}"() "
}
ra_validate() {
	local parent_log=${FUNCNAME[0]}"() "
}

case $__OCF_ACTION in
	meta-data)	ra_metadata "CRM";;
	start)		ra_start;;
	promote)	ra_promote;;
	demote)		ra_demote;;
	stop)		ra_stop;;
	monitor)	ra_monitor;;
	validate-all)	ra_validate;;
	notify)		ra_notify;;
	usage|help)	exit $OCF_SUCCESS;;
	*)		exit $OCF_ERR_UNIMPLEMENTED;;
esac

exit $?
